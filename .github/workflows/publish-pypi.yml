name: Publish to PyPI

on:
  push:
    tags:
      - "*"
  pull_request:

jobs:
  build_linux_x86_64:
    name: Build wheels for linux x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_ARCHS: x86_64
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.9"
          CIBW_MANYLINUX_X86_64_IMAGE: ghcr.io/artifactdb/prebuilt-hdf5/manylinux_x86_64:0.1.1
          CIBW_MUSLLINUX_X86_64_IMAGE: ghcr.io/artifactdb/prebuilt-hdf5/musllinux_x86_64:0.1.1
          CIBW_SKIP: pp*

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-ubuntu-x86_64
          path: ./wheelhouse/*.whl

  build_macosx_x86_64:
    name: Build wheels for macosx x86_64
    runs-on: macos-13
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Grab prebuilt dependencies
        run: |
            curl -L https://github.com/ArtifactDB/prebuilt-hdf5/releases/download/0.1.1/macosx_x86_64.tar.gz > bundle.tar.gz
            tar -xvf bundle.tar.gz

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_ARCHS: x86_64
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.9"
          CIBW_ENVIRONMENT: "MORE_CMAKE_OPTIONS=\"-DCMAKE_INSTALL_PREFIX=$(pwd)/installed -DCMAKE_OSX_ARCHITECTURES=x86_64\""
          CIBW_BUILD_VERBOSITY: 3
          CIBW_SKIP: pp*
          MACOSX_DEPLOYMENT_TARGET: 13.7

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-macos-x86_64
          path: ./wheelhouse/*.whl

  build_macosx_arm64:
    name: Build wheels for macosx arm64
    runs-on: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Grab prebuilt dependencies
        run: |
            curl -L https://github.com/ArtifactDB/prebuilt-hdf5/releases/download/0.1.1/macosx_arm64.tar.gz > bundle.tar.gz
            tar -xvf bundle.tar.gz

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_ARCHS: arm64
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.9"
          CIBW_ENVIRONMENT: "MORE_CMAKE_OPTIONS=\"-DCMAKE_INSTALL_PREFIX=$(pwd)/installed -DCMAKE_OSX_ARCHITECTURES=arm64\""
          CIBW_BUILD_VERBOSITY: 3
          CIBW_SKIP: pp*
          MACOSX_DEPLOYMENT_TARGET: 14.0

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-maxos_arm64
          path: ./wheelhouse/*.whl

#  build_windows_x86_64:
#    name: Build wheels for windows x86_64
#    runs-on: windows-2019
#    steps:
#      - name: Check out repository
#        uses: actions/checkout@v4
#
#      - name: Grab prebuilt dependencies
#        run: |
#            curl -L https://github.com/ArtifactDB/prebuilt-hdf5/releases/download/0.0.4/windows_x86_64.tar.gz > bundle.tar.gz
#            tar -xvf bundle.tar.gz
#        shell: bash
#
#      - name: Store path
#        run: |
#            $wd = pwd
#            echo "INSTALL_DIR=$wd\\installed" >> $env:GITHUB_ENV
#        shell: powershell
#
#      - name: Build wheels
#        uses: pypa/cibuildwheel@v2.22.0
#        env:
#          CIBW_ARCHS: AMD64
#          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.9"
#          CIBW_ENVIRONMENT: "MORE_CMAKE_OPTIONS=\"-DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}\" VERBOSE=1"
#          CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
#          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
#          CIBW_TEST_EXTRAS: "testing"
#          CIBW_TEST_COMMAND: "pytest {package}/tests"
#          CIBW_BUILD_VERBOSITY: 3
      # - uses: actions/upload-artifact@v3
      #   with:
      #     path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build_linux_x86_64, build_macosx_x86_64, build_macosx_arm64, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@v1.12.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
